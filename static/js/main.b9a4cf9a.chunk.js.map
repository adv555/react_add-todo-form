{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","App","useState","todosFromServer","setTodos","todosWithUser","usersFromServer","find","_user","initialFormValues","sort","a","b","formValues","setFormValues","errorMessageForTitle","setErrorMessageForTitle","errorMessageForUser","setErrorMessageForUser","handleFormChange","value","action","method","onSubmit","event","preventDefault","trim","type","placeholder","onChange","target","trimStart","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9a4cf9a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { IUser } from '../../types/user';\n\ninterface Props {\n  user?: IUser\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport './TodoInfo.scss';\nimport { ITodoWithUser } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: ITodoWithUser;\n}\n\nexport const TodoInfo:React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed === true,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { ITodoWithUser } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: ITodoWithUser[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList box\">\n      {todos?.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { ITodo, ITodoWithUser } from './types/todo';\nimport { TodoList } from './components/TodoList';\n\nexport const App:React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>(todosFromServer);\n\n  const todosWithUser: ITodoWithUser[] = todos.map((todo) => {\n    const user = usersFromServer.find((_user) => _user.id === todo.userId);\n\n    return {\n      ...todo,\n      user,\n    };\n  });\n\n  const newId = todos.map((todo) => todo.id).sort((a, b) => b - a)[0] + 1;\n\n  const initialFormValues: ITodo = {\n    id: newId,\n    title: '',\n    completed: false,\n    userId: 0,\n  };\n\n  const [formValues, setFormValues] = useState<ITodo>(initialFormValues);\n  const [errorMessageForTitle, setErrorMessageForTitle] = useState('');\n  const [errorMessageForUser, setErrorMessageForUser] = useState('');\n\n  const handleFormChange = (name: string, value: string | number) => {\n    if (name === 'title') {\n      setErrorMessageForTitle('');\n    }\n\n    if (name === 'userId') {\n      setErrorMessageForUser('');\n    }\n\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!formValues.title) {\n      setErrorMessageForTitle('Please enter a title');\n    }\n\n    if (!formValues.userId) {\n      setErrorMessageForUser('Please choose a user');\n    }\n\n    if (!formValues.title || !formValues.userId) {\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      {\n        ...formValues,\n        title: formValues.title.trim(),\n      },\n    ]);\n\n    setFormValues(initialFormValues);\n  };\n\n  return (\n    <div className=\"App container\">\n      <h1 className=\"title\">\n        Add todo form\n      </h1>\n\n      <div className=\"column is-half\">\n        <form\n          action=\"/api/todos\"\n          method=\"POST\"\n          className=\"box\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"field\">\n            <input\n              className=\"input is-primary\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Title\"\n              value={formValues.title}\n              onChange={(event) => {\n                handleFormChange('title', event.target.value.trimStart());\n              }}\n            />\n\n            {errorMessageForTitle && (\n              <span className=\"error\">{errorMessageForTitle}</span>\n            )}\n          </div>\n\n          <div\n            className=\"is-flex\n            is-justify-content-space-between is-align-content-center\"\n          >\n            <div className=\"field select is-primary\">\n              <select\n                data-cy=\"userSelect\"\n                value={formValues.userId}\n                onChange={\n                  (event) => handleFormChange('userId', +event.target.value)\n                }\n              >\n                <option value=\"0\" disabled>Choose a user</option>\n                {usersFromServer.map((user) => (\n                  <option key={user.id} value={user.id}>\n                    {user.name}\n                  </option>\n                ))}\n              </select>\n\n              {errorMessageForUser && (\n                <span className=\"error\">{errorMessageForUser}</span>\n              ) }\n            </div>\n\n            <button\n              type=\"submit\"\n              data-cy=\"submitButton\"\n              className=\"button is-primary are-large\"\n            >\n              Add\n            </button>\n          </div>\n        </form>\n\n        <TodoList todos={todosWithUser} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}